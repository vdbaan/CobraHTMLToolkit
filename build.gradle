plugins {
    id 'java'
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
        }
        def tag = stdout.toString().trim()
        stdout.reset()
        exec {
            commandLine 'git', 'describe', '--all'
            standardOutput = stdout
        }
        if ('heads/master'.equalsIgnoreCase(stdout.toString().trim()) || stdout.toString().trim().contains(tag)) {
            return tag
        } else {
            // Adding the branch name to the version
            def ver = stdout.toString().trim()
            return tag + '-' + ver.substring(ver.indexOf('/') + 1)
        }
    }
    catch (ignored) {
        return "0.0"
    }
}

dependencies {
    compile files('lib/js.jar')
}

sourceSets.main.java.srcDirs = ['src']
sourceCompatibility = 1.7
targetCompatibility = 1.7

version = getVersionName()

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}